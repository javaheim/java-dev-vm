#!/bin/bash
# STARTS "YET ANOTHER DIALOG" PANEL WITH APP BUTTONS

#
# Â© 2024-2025 Javaheim
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -o errexit  # ABORT ON NON-ZERO EXIT STATUS
set -o pipefail # DON'T HIDE ERRORS WITHIN PIPES

readonly APPS_PATH="${HOME}/.jdvm-launcher"
readonly ICON_PATH="/etc/jdvm-systemd/config/jdvm-launcher/jdvm-launcher.png"
readonly POSITION_X="1"
readonly POSITION_Y="1"

readonly STEP="[\e[1;96mSTEP\e[0m]"
readonly LINE="\e[1;96m-----\e[0m"
readonly WARNING="[\e[1;33mWARNING\e[0m]"

main() {
  readEnv
  createAppButtons
  startYadPanel
}

step() {
  local message="${1}"
  echo -e "${STEP} ${LINE} ${message} ${LINE}"
}

readEnv() {
  step "Read all env variables"
  if [[ -f "${HOME}/.zshenv" ]]; then
    . "${HOME}/.zshenv"
  fi
}

createAppButtons() {
  step "Create app buttons"
  for file in "${APPS_PATH}"/*.app; do
    if [[ -f "${file}" ]]; then
      name=$(grep "NAME=" "${file}" | sed "s/NAME=//")
      command=$(grep "COMMAND=" "${file}" | sed "s/COMMAND=//")
      appButtons+=( "--button=${name}:${command}")
    fi
  done
}

startYadPanel() {
  if [[ -z "${DISPLAY}" ]]; then
    step "Start fallback mode"
    echo -e "${WARNING} DISPLAY not set: GUI mode disabled"
    while true; do
      sleep 1h
    done
  fi
  if [[ -n "${appButtons[*]}" ]]; then
    step "Start YAD Panel"
    yad --fixed \
        --no-escape \
        --posx "${POSITION_X}" \
        --posy "${POSITION_Y}" \
        --window-icon "${ICON_PATH}" \
        --title "${HOSTNAME}" \
        "${appButtons[@]}"
  else
    step "Start Kitty Terminal"
    kitty "${HOME}"
  fi
}

main
